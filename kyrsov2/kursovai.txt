# This is a sample Python script.

# Press Shift+F10 to execute it or replace it with your code.
# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.


import cv2
import numpy as np


def viewImage(image, name_of_window):
    cv2.namedWindow(name_of_window, cv2.WINDOW_NORMAL)
    cv2.imshow(name_of_window, image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()


# задаем координаты для нашей прямой
def make_coordinates(image, line_parameters):
    # Y = MX + B
    slope, intercept = line_parameters
    y1 = image.shape[0]
    y2 = int(y1 * (3 / 5))
    x1 = int((y1 - intercept) / slope)
    x2 = int((y2 - intercept) / slope)
    return np.array([x1, y1, x2, y2])


# усреднение линий
def average_slope_intercept(image, lines):
    left_fit = []
    right_fit = []

    while lines is not None:
        for line in lines:
            x1, y1, x2, y2 = line.reshape(4)
            parameters = np.polyfit((x1, x2), (y1, y2), 1)
            slope = parameters[0]
            intercept = parameters[1]
            if slope < 0:
                left_fit.append((slope, intercept))
            else:
                right_fit.append((slope, intercept))

        left_fit_average = np.average(left_fit, axis=0)

        left_line = make_coordinates(image, left_fit_average)
        right_fit_average = np.average(right_fit, axis=0)
        right_line = make_coordinates(image, right_fit_average)

        return np.array([left_line, right_line])


def canny(image):
    gray = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)
    blur = cv2.GaussianBlur(gray, (5, 5), 0)
    canny = cv2.Canny(blur, 100, 150)
    return canny


# отображение самих линий
def display_lines(image, lines):
    line_image = np.zeros_like(image)
    if lines is not None:
        for x1, y1, x2, y2 in lines:
            cv2.line(line_image, (x1, y1), (x2, y2), (255, 0, 0), 15)
    return line_image


# наложение маски на изображение
"""Дорога для водителя выглядит как трапеция"""


def mask(image):
    height = image.shape[0]
    polygons = np.array([(200, height), (1100, height), (1000, 200), (0, 200)])
    mask = np.zeros_like(image)
    cv2.fillPoly(mask, np.array([polygons], dtype=np.int64), 1024)
    masked_image = cv2.bitwise_and(image, mask)
    return masked_image


"""
#Для обработки видео
video=cv2.VideoCapture("путь к видео")#0 значит с веб камеры
if not video.isOpened():
    print("error")

cv2.waitKey(1)#задержка в ms

while video.isOpened():
    frame=video.read()

    viewImage(frame)

"""

image = cv2.imread("ratandlines.png")
rgb_image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
cv2.imshow("Image", image)
cv2.waitKey(0)
cv2.destroyAllWindows()

# gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
# ret, threshold_image = cv2.threshold(gray_image, 127, 255, 0)
# viewImage(gray_image, " в градациях серого")
# viewImage(threshold_image, "белый ")
#
# image=mask(image)
blur = cv2.GaussianBlur(image, (3, 3), 0)
# viewImage(blur, "гауссаво размытие ")
canny_img = cv2.Canny(blur, 100, 150)  # 1 k 3 or 1k 2
viewImage(canny_img, "гауссаво размытие ")
lines = cv2.HoughLinesP(canny_img, 1, np.pi / 180, 100, np.array([()]), minLineLength=10, maxLineGap=3)
aver_lines = average_slope_intercept(canny_img, lines)
line_image = display_lines(rgb_image, aver_lines)
combo = cv2.addWeighted(rgb_image, 0.8, line_image, 0.5, 1)
viewImage(combo, "гауссаво размытие ")